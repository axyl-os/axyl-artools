#!/bin/bash
#
# Copyright (C) 2018-19 artoo@artixlinux.org
# Copyright (C) 2018 Artix Linux Developers
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

. @libdir@/artools/util-base.sh
. @libdir@/artools/util-pkg.sh

load_user_info

load_config "${USERCONFDIR}/artools/artools.conf" || load_config "${SYSCONFDIR}/artools.conf"

create_first=false

mkchrootpkg_args=(-c -n)

cmd=${0##*/}
repo=${cmd#*-}
base_devel=('base-devel')

case ${repo} in
    system|world|galaxy) repo='default' ;;
    lib32*) base_devel+=('multilib-devel') ;;
    galaxy-gremlins|galaxy-goblins) repo=${repo#*-} ;;
esac

pacman_conf="${DATADIR}/pacman-${repo}.conf"
[[ -f ${USERCONFDIR}/artools/pacman-${repo}.conf ]] && pacman_conf="${USERCONFDIR}/artools/pacman-${repo}.conf"

makepkg_conf="${DATADIR}/makepkg.conf"
[[ -f ${USERCONFDIR}/artools/makepkg.conf ]] && makepkg_conf="${USERCONFDIR}/artools/makepkg.conf"

usage() {
    echo "Usage: ${0##*/} [options] -- [mkchrootpkg_args]"
    echo "    -r <dir>           Create chroots in this directory"
    echo '    -c                 Recreate the chroot before building'
    echo '    -h                 This help'
    echo ''
    echo "Default mkchrootpkg_args args: ${mkchrootpkg_args[*]}"
    echo ''
    exit $1
}

orig_argv=("$0" "$@")

opts='hcr:'

while getopts "${opts}" arg; do
    case "${arg}" in
        r) CHROOTS_PKG="$OPTARG" ;;
        c) create_first=true ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '%s'" "${arg}"; usage 1 ;;
    esac
done

check_root SOURCE_DATE_EPOCH

mkchrootpkg_args+=("${@:$OPTIND}")

if ${create_first} || [[ ! -d "${CHROOTS_PKG}/${repo}-${ARCH}" ]];then
    msg "Creating chroot for [%s] (%s)..." "${repo}" "${ARCH}"

    for copy in "${CHROOTS_PKG}/${repo}-${ARCH}"/*; do
        [[ -d $copy ]] || continue
        msg2 "Deleting chroot copy '%s'..." "$(basename "${copy}")"

        lock 9 "$copy.lock" "Locking chroot copy '%s'" "$copy"

        subvolume_delete_recursive "${copy}"
        rm -rf --one-file-system "${copy}"
    done
    lock_close 9

    rm -rf --one-file-system "${CHROOTS_PKG}/${repo}-${ARCH}"
    mkdir -p "${CHROOTS_PKG}/${repo}-${ARCH}"
    setarch "${ARCH}" mkchroot \
        -C "${pacman_conf}" \
        -M "${makepkg_conf}" \
        "${CHROOTS_PKG}/${repo}-${ARCH}/root" \
        "${base_devel[@]}" || abort
else
    lock 9 "${CHROOTS_PKG}/${repo}-${ARCH}/root.lock" "Locking clean chroot"
    chroot-run \
        -C "${pacman_conf}" \
        -M "${makepkg_conf}" \
        "${CHROOTS_PKG}/${repo}-${ARCH}/root" \
        pacman -Syuu --noconfirm || abort
fi

# Always build official packages reproducibly
if [[ ! -v SOURCE_DATE_EPOCH ]]; then
    export SOURCE_DATE_EPOCH=$(date +%s)
fi

timer_start=$(get_timer)

msg "Building in chroot for [%s] (%s)..." "${repo}" "${ARCH}"
exec mkchrootpkg -r "${CHROOTS_PKG}/${repo}-${ARCH}" "${mkchrootpkg_args[@]}"

show_elapsed_time "${FUNCNAME}" "${timer_start}"
